{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dkhilchuk/Documents/dev-12-09-2023/next-advanced/pages/index.js\";\nimport MeetupList from '../components/meetups/MeetupList';\nimport { MongoClient } from 'mongodb';\nconst DUMMY_MEETUPS = [{\n  id: 'm1',\n  title: 'A first meetup',\n  address: 'Some address 5, 12345 Some City',\n  description: 'This is the first meetup!',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/5/51/Lvivrynok2018.jpg'\n}, {\n  id: 'm2',\n  title: 'A second meetup',\n  address: 'Some address 10, 12345 Some City',\n  description: 'This is the second meetup!',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/5/51/Lvivrynok2018.jpg'\n}];\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n} // should be used for data that is updated frequently\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     }\n//   }\n// }\n// called during build process\n\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect('mongodb+srv://hil400k:p9355wKH@cluster0.aixzlce.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        description: meetup.description,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 10\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["/Users/dkhilchuk/Documents/dev-12-09-2023/next-advanced/pages/index.js"],"names":["MeetupList","MongoClient","DUMMY_MEETUPS","id","title","address","description","image","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","_id","toString","revalidate"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AACA,SAASC,WAAT,QAA4B,SAA5B;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,OAAO,EAAE,iCAHX;AAIEC,EAAAA,WAAW,EAAE,2BAJf;AAKEC,EAAAA,KAAK,EAAE;AALT,CADoB,EAQpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,OAAO,EAAE,kCAHX;AAIEC,EAAAA,WAAW,EAAE,4BAJf;AAKEC,EAAAA,KAAK,EAAE;AALT,CARoB,CAAtB;;AAiBA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBACE;AAAA,2BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,0FAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAYC,MAAM,KAAK;AAC9BjB,QAAAA,KAAK,EAAEiB,MAAM,CAACjB,KADgB;AAE9BE,QAAAA,WAAW,EAAEe,MAAM,CAACf,WAFU;AAG9BD,QAAAA,OAAO,EAAEgB,MAAM,CAAChB,OAHc;AAI9BE,QAAAA,KAAK,EAAEc,MAAM,CAACd,KAJgB;AAK9BJ,QAAAA,EAAE,EAAEkB,MAAM,CAACC,GAAP,CAAWC,QAAX;AAL0B,OAAL,CAAlB;AADJ,KADF;AAULC,IAAAA,UAAU,EAAE;AAVP,GAAP;AAYD;AAED,eAAehB,QAAf","sourcesContent":["import MeetupList from '../components/meetups/MeetupList';\nimport { MongoClient } from 'mongodb';\n\nconst DUMMY_MEETUPS = [\n  {\n    id: 'm1',\n    title: 'A first meetup',\n    address: 'Some address 5, 12345 Some City',\n    description: 'This is the first meetup!',\n    image: 'https://upload.wikimedia.org/wikipedia/commons/5/51/Lvivrynok2018.jpg'\n  },\n  {\n    id: 'm2',\n    title: 'A second meetup',\n    address: 'Some address 10, 12345 Some City',\n    description: 'This is the second meetup!',\n    image: 'https://upload.wikimedia.org/wikipedia/commons/5/51/Lvivrynok2018.jpg'\n  }\n];\n\nfunction HomePage(props) {\n  return (\n    <>\n      <MeetupList meetups={props.meetups}></MeetupList>\n    </>\n  );\n}\n\n// should be used for data that is updated frequently\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     }\n//   }\n// }\n\n// called during build process\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect('mongodb+srv://hil400k:p9355wKH@cluster0.aixzlce.mongodb.net/?retryWrites=true&w=majority');\n  const db = client.db();\n\n  const meetupsCollection = db.collection('meetups');\n\n  const meetups = await meetupsCollection.find().toArray();\n\n  client.close();\n\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        description: meetup.description,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 10\n  }\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}